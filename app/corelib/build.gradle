/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Bï¿½lint' at '2017.02.20. 10:39' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */


buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// Apply the jacobon for xjc compilation
plugins {
    id 'org.unbroken-dome.xjc' version '0.1.1'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

// In this section you declare the dependencies for your production and test code
dependencies {

//    compile 'org.springframework.boot:spring-boot-starter:1.5.10.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.10.RELEASE'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'
    // Logback dependencies
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'ch.qos.logback:logback-core:1.2.3'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile 'mysql:mysql-connector-java:5.1.42'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    compile 'org.postgresql:postgresql:42.1.1'

    compile 'org.hibernate:hibernate-core:5.2.10.Final'
    compile 'org.hibernate:hibernate-validator:5.4.0.Final'
    compile 'org.hibernate:hibernate-c3p0:5.2.10.Final'

    compile 'org.apache.xmlgraphics:fop:2.2'
    compile 'org.apache.pdfbox:fontbox:2.0.8'
    compile 'org.apache.pdfbox:pdfbox:2.0.8'

    compile 'org.apache.commons:commons-lang3:3.0'

    // https://mvnrepository.com/artifact/javax.el/el-api
    compile 'javax.el:el-api:2.2'
    // https://mvnrepository.com/artifact/org.glassfish.web/javax.el
    compile 'org.glassfish.web:javax.el:2.2.6'

    compile 'com.google.inject:guice:4.1.0'
    compile "org.projectlombok:lombok:1.16.14"
    // https://mvnrepository.com/artifact/org.controlsfx/controlsfx
    compile 'org.controlsfx:controlsfx:8.40.11'
    compile 'org.jfxtras:jfxtras-labs:8.0-r5'

    compile 'io.dropwizard:dropwizard-core:1.1.0'
    compile 'io.dropwizard:dropwizard-assets:1.1.0'
    compile 'io.dropwizard:dropwizard-views-freemarker:1.1.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8'

    compile 'io.dropwizard:dropwizard-auth:1.1.0'

    testCompile project(':corelib')

    testCompile 'org.hamcrest:hamcrest-library:1.3','junit:junit:4.12',
    'org.powermock:powermock-core:1.6.5',
    'org.powermock:powermock-module-junit4:1.6.5',
    'org.powermock:powermock-api-mockito:1.6.5'

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile 'com.h2database:h2:1.0.60'

    xjcClasspath 'org.jvnet.jaxb2_commons:jaxb2-basics:0.11.1'

}


xjcGenerate {	
	String outdir = getProject().projectDir.getPath().concat('/src/main/java/')
	source='src/main/resources/schema/'
	outputDirectory= new File(outdir)
	targetPackage='com.inspirationlogical.receipt.corelib.jaxb'
}


tasks.withType(JavaCompile) { 
 options.compilerArgs << '-parameters'
 options.encoding = 'UTF-8'
}

